name: 'Clone Any Git Repo Action'

description: "Clone any git repository in Github Actions"

inputs:
  repository:
    description: 'Repository url'
    required: true
  access-token:
    description: 'Access token with http protocol'
    required: false
  ssh-key:
    description: 'SSH private key'
    required: false
  ssh-host:
    description: 'SSH server host, will auto scan known hosts by this value'
    required: false
  target-name:
    description: 'Clone target dir name'
    required: false

runs:
  using: "composite"
  steps:
    - shell: bash
      id: prep
      run: |
        REPOSITORY=${{ inputs.repository }}
        ACCESS_TOKEN=${{ inputs.access-token }}
        SSH_KEY=${{ inputs.ssh-key }}
        SSH_HOST=${{ inputs.ssh-host }}
        TARGET_NAME=${{ inputs.target-name }}

        PATH_SSH=$HOME/.ssh

        mkdir -p $PATH_SSH

        if [ -n "$SSH_KEY" ]; then
          echo "$SSH_KEY" > $PATH_SSH/id_rsa
        fi

        if [ -n "$SSH_HOST" ]; then
          apk update
          apk add openssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
        fi

        Z_REPOSITORY=$REPOSITORY

        if [ -n "$ACCESS_TOKEN" ]; then
          echo 'access token: ' $ACCESS_TOKEN
          if [[ "$REPOSITORY" =~ ^https://* ]]; then
              Z_REPOSITORY=$(echo $REPOSITORY | sed -e "s/https:\/\//https:\/\/${ACCESS_TOKEN}@/g")
          fi
          if [[ "$REPOSITORY" =~ ^http://* ]]; then
              Z_REPOSITORY=$(echo $REPOSITORY | sed -e "s/http:\/\//http:\/\/${ACCESS_TOKEN}@/g")
          fi
        fi



        if [ -z "$TARGET_NAME" ]; then
            git clone $Z_REPOSITORY

            echo "Cloned $2 repository successfully."
        else
            git clone Z_REPOSITORY $TARGET_NAME

            echo "Cloned $2 repository successfully."
            echo "Access the repository content using \"cd $2\"."
        fi


branding:
  icon: 'download'
  color: 'blue'
