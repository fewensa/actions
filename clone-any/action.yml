name: 'Clone Any Git Repo Action'

description: "Clone any git repository in Github Actions"

inputs:
  platform:
    description: 'The git platform, if you want use custom platform, please set none'
    required: false
    default: 'github'
  server_host:
    description: 'Custom server_host'
    required: false
  enable_ssl:
    description: 'Is enable https'
    required: false
    default: 'true'
  repository:
    description: 'Repository url'
    required: true
  access_token:
    description: 'Access token with http protocol'
    required: false
  ssh_key:
    description: 'SSH private key'
    required: false
  ssh_host:
    description: 'SSH server host, will auto scan known hosts by this value'
    required: false
  target:
    description: 'Clone target dir name'
    required: false
  ref:
    description: 'Ref'
    required: false

runs:
  using: "composite"
  steps:

    - name: Clone
      shell: bash
      id: deploy_vercel
      run: |
        set -e
        REPOSITORY=${{ inputs.repository }}
        ACCESS_TOKEN=${{ inputs.access_token }}
        SSH_KEY=${{ inputs.ssh_key }}
        SSH_HOST=${{ inputs.ssh_host }}
        TARGET_NAME=${{ inputs.target }}
        PLATFORM=${{ inputs.platform }}
        SERVER_HOST=${{ inputs.server_host }}
        ENABLE_SSL=${{ inputs.enable_ssl }}
        GIT_REF=${{ inputs.ref }}


        mkdir -p ~/.ssh

        if [ -n "$SSH_KEY" ]; then
          eval $(ssh-agent -s)
          echo "$SSH_KEY" | tr -d '\r' | ssh-add -
        fi

        if [ -n "$SSH_HOST" ]; then
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
        fi

        _SERVER=

        if [ "${PLATFORM}" == "github" ]; then
          _SERVER=github.com
        elif [ "${PLATFORM}" == "gitlab" ]; then
          _SERVER=gitlab.com
        else
          _SERVER=${SERVER_HOST}
        fi

        Z_REPOSITORY=
        Z_SAFE_REPOSITORY=


        if [ -n "${SSH_KEY}" ]; then
          Z_REPOSITORY="ssh://${_SERVER}/${REPOSITORY}"
          Z_SAFE_REPOSITORY=${Z_REPOSITORY}
        else
          PROTOCOL='https://'
          if [ "${ENABLE_SSL}" != "true" ]; then
            PROTOCOL='http://'
          fi
          Z_REPOSITORY=${PROTOCOL}${ACCESS_TOKEN:+"$ACCESS_TOKEN@"}${_SERVER}/${REPOSITORY}
          Z_SAFE_REPOSITORY=${PROTOCOL}${_SERVER}/${REPOSITORY}
        fi

        echo "Repository: ${Z_SAFE_REPOSITORY}"
        if [ -z "$TARGET_NAME" ]; then
            # git clone $Z_REPOSITORY .
            
            git clone $Z_REPOSITORY repo
            if [ -n "${GIT_REF}" ]; then
              git checkout -b ${GIT_REF} origin/${GIT_REF}
            fi
            mv ./repo/* ./
            rm -rf ./repo

            echo "Cloned $Z_REPOSITORY repository successfully."
        else
            git clone $Z_REPOSITORY $TARGET_NAME
            if [ -n "${GIT_REF}" ]; then
              git checkout -b ${GIT_REF} origin/${GIT_REF}
            fi

            echo "Cloned $Z_REPOSITORY repository successfully."
            echo "Access the repository content using \"cd $TARGET_NAME\"."
        fi


